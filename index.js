import express from "express";
import TelegramBot from "node-telegram-bot-api";
import axios from "axios";

const app = express();
const PORT = process.env.PORT || 3000;

app.get("/", (_req, res) => res.send("JEETS Whale Bot is alive on Render!"));

// Environment –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
const TELEGRAM_TOKEN = process.env.TELEGRAM_TOKEN;
const CHAT_ID = process.env.CHAT_ID;
const WHALE_ADDRESS = process.env.WHALE_ADDRESS;
const JEETS_TOKEN_ADDRESS = process.env.JEETS_TOKEN_ADDRESS;
const SOLANA_API_KEY = process.env.SOLANA_API_KEY;

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
if (!TELEGRAM_TOKEN || !CHAT_ID || !WHALE_ADDRESS || !JEETS_TOKEN_ADDRESS || !SOLANA_API_KEY) {
  console.log("‚ùå Missing environment variables!");
  process.exit(1);
}

// Telegram –±–æ—Ç
const bot = new TelegramBot(TELEGRAM_TOKEN, { polling: true });
function sendWhaleSignal(msg) { bot.sendMessage(CHAT_ID, msg); }

// –î–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –±–∞–ª–∞–Ω—Å–∞ —Ç–æ–∫–µ–Ω–∞
let lastBalance = 0;

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Ü–µ–Ω—ã Jeets –≤ USD (–ø—Ä–∏–º–µ—Ä —á–µ—Ä–µ–∑ CoinGecko)
async function getJeetsPriceUSD() {
  try {
    const response = await axios.get('https://api.coingecko.com/api/v3/simple/price?ids=jeets&vs_currencies=usd');
    return response.data.jeets.usd || 0;
  } catch (error) {
    console.log("Error fetching Jeets price:", error.message);
    return 0;
  }
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –∫–∏—Ç–∞ –ø–æ —Ç–æ–∫–µ–Ω—É Jeets
async function checkWhaleActivity() {
  try {
    const response = await axios.get(
      `https://public-api.solscan.io/account/tokens?account=${WHALE_ADDRESS}`,
      { headers: { "token": SOLANA_API_KEY } }
    );

    const tokens = response.data;
    const jeetsToken = tokens.find(token => token.tokenAddress === JEETS_TOKEN_ADDRESS);

    if (jeetsToken) {
      const currentBalance = parseFloat(jeetsToken.tokenAmount.uiAmount);
      const change = currentBalance - lastBalance;
      const priceUSD = await getJeetsPriceUSD();
      const changeUSD = Math.abs(change * priceUSD);

      // –°–∏–≥–Ω–∞–ª–∏–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –¥–≤–∏–∂–µ–Ω–∏–µ ‚â• 100$
      if (changeUSD >= 100) {
        lastBalance = currentBalance;
        sendWhaleSignal(`üêã –ö–∏—Ç ${WHALE_ADDRESS} ${change > 0 ? '–∫—É–ø–∏–ª' : '–ø—Ä–æ–¥–∞–ª'} ${Math.abs(change)} Jeets (~$${changeUSD.toFixed(2)}). –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: ${currentBalance}`);
      } else {
        console.log(`–î–≤–∏–∂–µ–Ω–∏–µ –ø–æ Jeets < $100: ~$${changeUSD.toFixed(2)}, —Å–∏–≥–Ω–∞–ª –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.`);
      }
    } else {
      console.log("–ö–∏—Ç –Ω–µ –¥–µ—Ä–∂–∏—Ç —Ç–æ–∫–µ–Ω Jeets –∏–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–π –∞–¥—Ä–µ—Å —Ç–æ–∫–µ–Ω–∞.");
    }

  } catch (error) {
    console.log("Error checking whale activity:", error.message);
  }
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
setInterval(checkWhaleActivity, 300000);

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ –≤ Telegram
bot.on("message", (msg) => {
  if (msg.text === "/start") {
    bot.sendMessage(msg.chat.id, "–ü—Ä–∏–≤–µ—Ç! –Ø JEETS Whale Tracker! –°–ª–µ–¥—É—é –∑–∞ –∫–∏—Ç–∞–º–∏ –ø–æ —Ç–æ–∫–µ–Ω—É Jeets, —Å–∏–≥–Ω–∞–ª—ã —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –¥–≤–∏–∂–µ–Ω–∏–∏ ‚â• $100.");
  }
});

app.listen(PORT, () => console.log(`Server listening on port ${PORT}`));
